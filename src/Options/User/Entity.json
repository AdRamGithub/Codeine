{
    "Mixins":
    [
        "Mixins.ID.Sequence",
        "Mixins.UGC",
        "Mixins.Filled",
        "Mixins.Verifiable",
        "Mixins.Balance",
        "Mixins.Channel"
    ],
    "Sort":
    {
        "Created": true
    },
    "Storage": "Primary",
    "EPP": 20,
    "Nodes":
    {
        "Gender":
        {
            "Type": "List.Enum",
            "Default": "U",
            "Verifiable": true,
            "Options": ["U", "M", "F"],
            "Localized": true,
            "Widgets":
            {
                "Write":
                {
                    "Type": "Form.Select"
                }
            }
        },
        "Status":
        {
            "Type": "Ternary",
            "Default": 1
        },
        "Fullname": {},
        "Title":
        {
            "Type": "Literal.String",
            "Verifiable": true,
            "User Override": true,
            "Widgets":
            {
                "Write":
                {
                    "Type": "Form.Textfield"
                }
            }
        },
        "Password":
        {
            "Type": "Literal.Password",
            "User Override": true,
            "Hooks":
            {
                "beforeEntityCreate":
                {
                    "Service": "Security.Password.Generator",
                    "Method": "Get",
                    "Call":
                    {
                        "Length": 8
                    }
                }
            },
            "Widgets":
            {
                "Write":
                {
                    "Type": "Form.Password"
                }
            }
        },
        "DOB":
        {
            "Default": null,
            "Nullable": true,
            "Type": "Date.Short",
            "Verifiable": true,
            "Widgets":
            {
                "Update":
                {
                    "Type": "Form.Datepicker"
                }
            }
        },
        "Age":
        {
            "Hooks":
            {
                "beforeEntityWrite":
                {
                    "Service": "User.Entity",
                    "Method": "Age"
                }
            }
        },
        "Photo":
        {
            "Type": "File.Upload",
            "Storage": "Upload",
            "Widgets":
            {
                "Write":
                {
                    "Type": "Form.File"
                }
            }
        },
        "APIKey":
        {
            "Type": "Literal.String",
            "Hooks":
            {
                "beforeEntityWrite":
                {
                    "Service": "Security.UID",
                    "Method": "Get",
                    "Call":
                    {
                        "Mode": "Secure+"
                    }
                }
            }
        },
        "Avatar":
        {
            "Hooks":
            {
                "beforeEntityWrite":
                {
                    "Service": "User.Entity",
                    "Method": "Photo"
                }
            }
        },
        "EMail":
        {
            "Type": "Literal.EMail",
            "Verifiable": true,
            "Unique": true,
            "Widgets":
            {
                "Write":
                {
                    "Type": "Form.Textfield",
                    "Subtype": "email"
                },
                "Update":
                {
                    "Type": "Form.Static"
                }
            },
            "Hooks":
            {
                "-beforeEntityCreate":
                {
                    "Service": "User.EMail",
                    "Method": "Verify"
                }
            }
        }
    },
    "Hooks":
    {
        "afterLogin":
        {
            "Redirect":
            {
                "Service": "System.Interface.Web",
                "Method": "Redirect",
                "Call":
                {
                    "Location": "/"
                }
            }
        },
        "afterUpdatePost!":
        {
            "Show message":
            {
                "Output":
                {
                    "Message":
                    {
                        "Success":
                        {
                            "Type": "Block",
                            "Class": "alert alert-success",
                            "Value": "Профиль обновлён"
                        }
                    }

                }
            }
        },
        "afterLogout!":
        {
            "Redirect":
            {
                "Service": "System.Interface.Web",
                "Method": "Redirect",
                "Call":
                {
                    "Location": "/"
                }
            }
        },
        "beforeDeleteGet":
        {
            "Store URL":
            {
                "Service": "System.Interface.Web",
                "Method": "StoreURL"
            }
        },
        "afterDeletePost":
        {
            "Restore URL":
            {
                "Service": "System.Interface.Web",
                "Method": "RestoreURL"
            }
        }
    }
}