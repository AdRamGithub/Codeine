{
    "Storage": "Primary",
    "Contract":
    {
        "Entity":
        {
            "Count":
            {
                "Memo": ["Entity", "Where", "Time", "Key", "Location.ID"]
            },
            "Read":
            {
                "Memo": ["Entity", "Where", "Time", "Key", "Fields", "One", "Sort", "Filter", "Limit"]
            }
        }
    },
    "Default Nodes":
    {
        "EV":
        {
            "Type": "Numeral.Integer",
            "Widgets": {}
        }
    },
    "Hooks":
    {
        "beforeOperation":
        {
            "Load model (essential)":
            {
                "Service":"Entity",
                "Method":"Load"
            },
            "Scope":
            {
                "Service": "Entity.Hooks.Scope",
                "Method": "beforeOperation"
            },
            "Filter":
            {
                "Service":"Entity.Hooks.Filter",
                "Method":"beforeOperation"
            },
            "Location":
            {
                "Service":"Entity.Hooks.Location",
                "Method":"beforeOperation"
            },
            "Sort":
            {
                "Service": "Entity.Hooks.Sort",
                "Method": "beforeOperation"
            },
            "Date":
            {
                "Service": "Entity.Hooks.Date",
                "Method": "beforeOperation"
            },
            "Where":
            {
                "Service": "Entity.Hooks.Where",
                "Method": "beforeOperation"
            },
            "Convert empty to null":
            {
                "Service":"Entity.Hooks.ConvertEmptyToNull",
                "Method":"Process"
            }
        },
        "beforeEntityCreate":
        {
            "Default values":
            {
                "Service":"Entity.Hooks.Default",
                "Method":"Process"
            },
            "Make variables alive":
            {
                "Service":"Entity.Hooks.LiveNodes",
                "Method":"Process"
            }
        },
        "beforeEntityUpdate":
        {
            "Filter":
            {
                "Service":"Entity.Hooks.Process",
                "Method":"Process"
            },
            "Make variables alive":
            {
                "Service":"Entity.Hooks.LiveNodes",
                "Method":"Process"
            }
        },
        "beforeEntityCreateOrUpdate":
        {
            "Validate":
            {
                "Service":"Entity.Hooks.Validate",
                "Method":"Process",
                "Call":
                {
                    "Purpose": "Update"
                }
            },
            "Make variables alive":
            {
                "Service":"Entity.Hooks.LiveNodes",
                "Method":"Process"
            },
            "Inherited values":
            {
                "Service":"Entity.Hooks.Inherited",
                "Method":"Process"
            }
        },
        "beforeEntityDelete":
        {
            "Load model (essential)":
            {
                "Service":"Entity",
                "Method":"Load"
            },
            "Datatypes":
            {
                "Service":"Entity.Hooks.Type",
                "Method":"Write",
                "Call":
                {
                    "Purpose": "Delete"
                }
            }
        },
        "beforeEntityWrite":
        {
            "Strict":
            {
                "Service":"Entity.Hooks.Strict",
                "Method":"Process",
                "Weight": 100
            },
            "Make variables alive":
            {
                "Service":"Entity.Hooks.LiveNodes",
                "Method":"Process",
                "Weight": 300
            },
            "EV":
            {
                "Service":"Entity.Hooks.EV",
                "Method":"beforeOperation",
                "Weight": 400
            },
            "Datatypes":
            {
                "Service":"Entity.Hooks.Type",
                "Method":"Write"
            }
        },
        "afterEntityCreate":
        {
            "Make variables alive":
            {
                "Service":"Entity.Hooks.LiveNodes",
                "Method":"Process"
            }
        },
        "beforeEntityRead":
        {
            "-GEC":
            {
                "Service":"Entity.Hooks.GEC",
                "Method":"beforeEntityRead"
            }
        },
        "afterEntityRead":
        {
            "Default values":
            {
                "Service":"Entity.Hooks.Default",
                "Method":"Process"
            },
            "Datatypes":
            {
                "Service":"Entity.Hooks.Type",
                "Method":"Read"
            },
            "Make variables alive":
            {
                "Service":"Entity.Hooks.LiveNodes",
                "Method": "Process"
            },
            "-GEC":
            {
                "Service":"Entity.Hooks.GEC",
                "Method":"afterEntityRead"
            }
        },
        "afterEntityWrite":
        {
            "Datatypes":
            {
                "Service":"Entity.Hooks.Type",
                "Method":"Read",
                "Weight": 1000
            }
        }
    }
}
