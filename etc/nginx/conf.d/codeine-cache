    charset utf-8;
	index  index.php;

    merge_slashes on;

    log_not_found on;

    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/$host.access.log codeine;

	location /
	{
		try_files $uri $uri/ /index.php?$uri&$args;
	}

    location ~* \.(woff|ttf|eot)$
    {
        expires max;
        log_not_found off;
    }

    location ~ ^/cache/(.*)
    {
        access_log        off;
        alias /tmp/codeine/$host/$1;
        expires           max;
    }

    location ~* \.(jpg|jpeg|gif|css|png|js|ico|woff|ttf)$
	{
		access_log        off;
		expires           max;
		add_header        Cache-Control  public;
	}

	location ~ index.php$
	{
	    include fastcgi_params;

        if ($http_user_agent ~* (bot|crawl|\+http:))
        {
            access_log /var/log/nginx/$host.bots.log;
        }

        set $no_cache 0;

        # Отключаем кеш для всех методов, кроме GET и HEAD

        if ($request_method !~ ^(GET|HEAD)$) {
            set $no_cache "1";
        }

        # В случае если клиент загружает контент на сайт (no_cache = 1), делаем так, чтобы отдаваемые ему данные не кешировались в течение двух секунд и он смог увидеть результат загрузки

        if ($no_cache = "1") {
            add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
            add_header X-Microcachable "0";
        }
        if ($http_cookie ~* "_mcnc") {
            set $no_cache "1";
        }

        add_header X-No-Cached $no_cache;

        # Включаем/отключаем кеш в зависимости от состояния переменной no_cache

        fastcgi_cache_bypass $no_cache;

        fastcgi_cache_key $scheme$host$request_method$request_uri;
        fastcgi_cache_valid 200 10m;
        fastcgi_cache_use_stale updating;

        fastcgi_keep_conn on;

        fastcgi_param  Environment $Environment;
		fastcgi_pass   $Backend;
		fastcgi_index  index.php;

        fastcgi_param  DOCUMENT_ROOT    $document_root;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_script_name;

        fastcgi_param  QUERY_STRING     $query_string;
        fastcgi_param  REQUEST_METHOD   $request_method;
        fastcgi_param  CONTENT_TYPE     $content_type;
        fastcgi_param  CONTENT_LENGTH   $content_length;

        fastcgi_intercept_errors        on;
        fastcgi_ignore_client_abort     off;
        fastcgi_connect_timeout 60;
        fastcgi_send_timeout 180;
        fastcgi_read_timeout 180;
        fastcgi_buffer_size 1m;
        fastcgi_buffers 4 1m;
        fastcgi_busy_buffers_size 1m;
        fastcgi_temp_file_write_size 1m;
	}